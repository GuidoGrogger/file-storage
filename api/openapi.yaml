openapi: 3.0.0
info:
  title: File Storage Service
  version: 1.0.0
  description: A service for asynchronous file uploads and downloads

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /upload-jobs:
    post:
      summary: Create a new upload job
      description: Creates a new upload job and returns a UUID
      operationId: createUploadJob
      responses:
        '201':
          description: Upload job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /upload-jobs/{jobId}:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get upload job status
      description: Returns the current status of an upload job
      operationId: getUploadJobStatus
      responses:
        '200':
          description: Upload job status retrieved successfully
          headers:
            Location:
              schema:
                type: string
                description: URL to download the file (only present when status is COMPLETED). Example: http://localhost:8080/files/123e4567-e89b-12d3-a456-426614174000
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobStatus'
        '404':
          description: Upload job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Upload file for job
      description: Uploads a file for the specified job ID
      operationId: uploadFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload. Exactly one file must be provided, and no additional fields are allowed.
              additionalProperties: false
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJobStatus'
        '404':
          description: Upload job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /files/{fileId}:
    parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Download file
      description: Downloads a file by its ID
      operationId: downloadFile
      responses:
        '200':
          description: File downloaded successfully
          headers:
            Content-Disposition:
              schema:
                type: string
                description: Contains the filename for the downloaded file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: File not ready for download
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    UploadJobResponse:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
          description: The UUID of the created upload job
        filename:
          type: string
          description: The name of the file to be uploaded
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the job was created

    UploadJobStatus:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        filename:
          type: string
          description: The name of the file being uploaded
        status:
          type: string
          enum: [PENDING, UPLOADING, VIRUS_CHECKING, COMPLETED, FAILED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        error:
          type: string
          description: Error message if status is FAILED
        fileId:
          type: string
          format: uuid
          description: The ID of the uploaded file (only present when status is COMPLETED)

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string 